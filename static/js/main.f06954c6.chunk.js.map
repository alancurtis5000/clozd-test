{"version":3,"sources":["components/Header/Header.jsx","components/Footer/Footer.jsx","components/Sidebar/Sidebar.jsx","redux/reducers/users/usersTypes.js","redux/reducers/users/usersActions.js","redux/reducers/user/userTypes.js","components/UsersDataTable/UsersDataTable.jsx","redux/reducers/user/userActions.js","pages/Users/Users.jsx","components/UserDetailCard/UserDetailCard.jsx","pages/User/User.jsx","pages/NotFound/NotFound.jsx","routes/AppRouter.jsx","App.jsx","reportWebVitals.js","redux/reducers/users/usersReducer.js","redux/reducers/user/userReducer.js","redux/rootReducer.js","redux/configureStore.js","index.js"],"names":["Header","className","style","display","justifyContent","alignItems","margin","Footer","Sidebar","to","usersActionTypes","getUsersSuccess","users","type","payload","data","userActionTypes","connect","state","dispatch","getUsers","a","axios","get","then","response","mapUsers","results","map","user","index","key","name","first","last","email","city","location","country","address","street","number","postcode","picture","medium","phone","dob","date","catch","error","console","log","setUser","withRouter","props","history","isLoaded","useEffect","isEmpty","columns","title","dataIndex","dataSource","loading","onRow","record","rowIndex","onClick","event","push","handleOnRowClick","Users","Meta","Card","width","marginTop","avatar","active","src","id","moment","format","User","NotFound","Routes","path","exact","component","AppRouter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initalState","usersReducer","action","userReducer","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f06954c6.chunk.js","sourcesContent":["const Header = () => {\r\n  return (\r\n    <div\r\n      className=\"Header\"\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h1\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n      >\r\n        Alan Curtis: Get all the Users\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const Footer = () => {\r\n  return <div className=\"Footer\"></div>;\r\n};\r\n\r\nexport default Footer;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className=\"Sidebar\">\r\n      <h2>Navigation</h2>\r\n      <div className=\"links\">\r\n        <Link to=\"/\">\r\n          <button>Users</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","export const usersActionTypes = {\r\n  GET_USERS_START: \"GET_USERS_START\",\r\n  GET_USERS_SUCCESS: \"GET_USERS_SUCCESS\",\r\n  GET_USERS_FAILURE: \"GET_USERS_FAILURE\",\r\n};\r\n","import { usersActionTypes } from \"./usersTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const getUsersStart = () => ({\r\n  type: usersActionTypes.GET_USERS_START,\r\n});\r\nexport const getUsersSuccess = (users) => ({\r\n  type: usersActionTypes.GET_USERS_SUCCESS,\r\n  payload: { data: users },\r\n});\r\nexport const getUsersFailure = () => ({\r\n  type: usersActionTypes.GET_USERS_FAILURE,\r\n});\r\n\r\nexport const getUsers = () => {\r\n  return async (dispatch) => {\r\n    dispatch(getUsersStart());\r\n    return axios\r\n      .get(\"https://randomuser.me/api/?results=100\")\r\n      .then((response) => {\r\n        const users = response.data.results;\r\n        const mapUsers = users.map((user, index) => {\r\n          return {\r\n            key: index,\r\n            name: `${user.name.first} ${user.name.last}`,\r\n            email: user.email,\r\n            city: user.location.city,\r\n            country: user.location.country,\r\n            address: `${user.location.street.number} ${user.location.street.name}`,\r\n            postcode: user.location.postcode,\r\n            picture: user.picture.medium,\r\n            phone: user.phone,\r\n            dob: user.dob.date,\r\n          };\r\n        });\r\n        dispatch(getUsersSuccess(mapUsers));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(getUsersFailure());\r\n      });\r\n  };\r\n};\r\n","export const userActionTypes = {\r\n  SET_USER: \"SET_USER\",\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUsers } from \"../../redux/reducers/users/usersActions\";\r\nimport { setUser } from \"../../redux/reducers/user/userActions\";\r\nimport { Table } from \"antd\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst UsersDataTable = (props) => {\r\n  const { getUsers, setUser, users, history } = props;\r\n  const { isLoaded } = users;\r\n\r\n  useEffect(() => {\r\n    if (isEmpty(users.data)) {\r\n      getUsers();\r\n    }\r\n  }, [getUsers, users.data]);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n    },\r\n    {\r\n      title: \"City\",\r\n      dataIndex: \"city\",\r\n      key: \"city\",\r\n    },\r\n    {\r\n      title: \"Country\",\r\n      dataIndex: \"country\",\r\n      key: \"country\",\r\n    },\r\n  ];\r\n\r\n  const handleOnRowClick = (record, rowIndex) => {\r\n    setUser(record);\r\n    history.push(`/user/${record.key}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"UserDataTable\">\r\n      <Table\r\n        columns={columns}\r\n        dataSource={users.data}\r\n        loading={!isLoaded}\r\n        onRow={(record, rowIndex) => {\r\n          return {\r\n            onClick: (event) => handleOnRowClick(record, rowIndex),\r\n          };\r\n        }}\r\n      ></Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getUsers: () => dispatch(getUsers()),\r\n  setUser: (user) => dispatch(setUser(user)),\r\n});\r\nconst mapStateToProps = (state) => ({\r\n  users: state.users,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(UsersDataTable));\r\n","import { userActionTypes } from \"./userTypes\";\r\n\r\nexport const setUser = (user) => ({\r\n  type: userActionTypes.SET_USER,\r\n  payload: user,\r\n});\r\n","import UsersDataTable from \"../../components/UsersDataTable/UsersDataTable\";\r\n\r\nconst Users = () => {\r\n  return (\r\n    <div className=\"Users page\">\r\n      <h2>Users</h2>\r\n      <UsersDataTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Skeleton, Card, Avatar } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst { Meta } = Card;\r\n\r\nconst UserDetailCard = (props) => {\r\n  const {\r\n    name,\r\n    email,\r\n    city,\r\n    country,\r\n    address,\r\n    postcode,\r\n    picture,\r\n    phone,\r\n    dob,\r\n  } = props.user;\r\n\r\n  return (\r\n    <div className=\"UserDetailCard\">\r\n      <Card\r\n        style={{\r\n          width: 400,\r\n          marginTop: 16,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton loading={false} avatar active>\r\n          <Meta avatar={<Avatar src={picture} />} title={name} />\r\n          <div style={{ marginTop: 16 }}>\r\n            <label>\r\n              <b>Email: </b>\r\n            </label>\r\n            <span id=\"email\">{email}</span>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <b>Phone: </b>\r\n            </label>\r\n            <span id=\"phone\">{phone}</span>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <b>Address: </b>\r\n            </label>\r\n            <span id=\"address\">{address}</span>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <b>City: </b>\r\n            </label>\r\n            <span id=\"city\">{city}</span>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <b>Postcode: </b>\r\n            </label>\r\n            <span id=\"postcode\">{postcode}</span>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <b>Country: </b>\r\n            </label>\r\n            <span id=\"country\">{country}</span>\r\n          </div>\r\n\r\n          <div>\r\n            <label>\r\n              <b>Birthdate: </b>\r\n            </label>\r\n            <span id=\"dob\">{moment(dob).format(\"MMMM Do YYYY\")}</span>\r\n          </div>\r\n        </Skeleton>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserDetailCard));\r\n","import UserDetailCard from \"../../components/UserDetailCard/UserDetailCard\";\r\n\r\nconst User = () => {\r\n  return (\r\n    <div className=\"User page\">\r\n      <h2>User</h2>\r\n      <UserDetailCard />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","const NotFound = () => {\r\n  return <div className=\"NotFound page\">NotFound</div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch, withRouter } from \"react-router-dom\";\r\n\r\nimport Header from \"../components/Header/Header\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport Sidebar from \"../components/Sidebar/Sidebar\";\r\n\r\nimport Users from \"../pages/Users/Users\";\r\nimport User from \"../pages/User/User\";\r\nimport NotFound from \"../pages/NotFound/NotFound\";\r\n\r\nconst Routes = withRouter(({ location }) => {\r\n  return (\r\n    <Switch location={location}>\r\n      <Route path=\"/\" exact component={Users} />\r\n      <Route path=\"/user/:id\" component={User} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  );\r\n});\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <Sidebar />\r\n      <Footer />\r\n      <div className=\"content\">\r\n        <Routes />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import AppRoutes from './routes/AppRouter';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AppRoutes />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { usersActionTypes } from \"./usersTypes\";\r\n\r\nconst initalState = {\r\n  data: [],\r\n  isLoaded: false,\r\n  error: \"\",\r\n};\r\n\r\nconst usersReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case usersActionTypes.GET_USERS_START:\r\n      return {\r\n        ...state,\r\n        isLoaded: false,\r\n      };\r\n    case usersActionTypes.GET_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isLoaded: true,\r\n      };\r\n    case usersActionTypes.GET_USERS_FAILURE:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isLoaded: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n","import { userActionTypes } from \"./userTypes\";\r\n\r\nconst initalState = {};\r\n\r\nconst userReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case userActionTypes.SET_USER:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport usersReducer from \"./reducers/users/usersReducer\";\r\nimport userReducer from \"./reducers/user/userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  users: usersReducer,\r\n  user: userReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst configureStore = () => {\r\n  const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n  );\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/main.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/configureStore';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}